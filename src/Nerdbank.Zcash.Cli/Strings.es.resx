<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BadSeedPhraseLength" xml:space="preserve">
    <value>La longitud de la frase semilla debe ser de al menos 24 y un múltiplo de 3.</value>
  </data>
  <data name="SeedPhrasePrompt" xml:space="preserve">
    <value>Introduzca la frase semilla:</value>
  </data>
  <data name="InvalidSeedPhrase" xml:space="preserve">
    <value>Frase semilla no válida.</value>
  </data>
  <data name="SeedLengthAndSeedPhraseNotAllowed" xml:space="preserve">
    <value>No especifique tanto la frase semilla como la longitud de una frase semilla generada.</value>
  </data>
  <data name="PasswordOptionDescription" xml:space="preserve">
    <value>Una contraseña además de la frase semilla que desbloquea la cuenta. Si bien cualquier frase servirá, algunos monederos solo aceptan una palabra.</value>
  </data>
  <data name="SeedPhraseOptionDescription" xml:space="preserve">
    <value>Usa una frase semilla en particular. Especifique uno como argumento o un mensaje lo recopilará de forma interactiva.</value>
  </data>
  <data name="AccountIndexOptionDescription" xml:space="preserve">
    <value>El índice de la cuenta a crear.</value>
  </data>
  <data name="LightServerUrlOptionDescription" xml:space="preserve">
    <value>La URL al servidor lightwallet para consultar la longitud de la cadena de bloques con el fin de imprimir una altura de cumpleaños. El valor predeterminado varía según si se genera para mainnet o testnet.</value>
  </data>
  <data name="NewAccountCommandDescription" xml:space="preserve">
    <value>Crea una nueva cuenta Zcash.</value>
  </data>
  <data name="OfflineOptionDescription" xml:space="preserve">
    <value>Suprime todas las comunicaciones de red. En particular, esto eliminará la visualización de la altura de cumpleaños para la nueva cuenta.</value>
  </data>
  <data name="SeedPhraseLengthOptionDescription" xml:space="preserve">
    <value>El número de palabras en la frase semilla generada. Debe ser 24 o más, y un múltiplo de 3.</value>
  </data>
  <data name="TestNetOptionDescription" xml:space="preserve">
    <value>Indica que la cuenta se utilizará en una red de prueba en lugar de en una red principal.</value>
  </data>
  <data name="RootCommandDescription" xml:space="preserve">
    <value>Realiza operaciones con Zcash.</value>
  </data>
  <data name="UACommandDescription" xml:space="preserve">
    <value>Codifica o decodifica direcciones UA.</value>
  </data>
  <data name="UAParseArgumentDescription" xml:space="preserve">
    <value>La dirección unificada a decodificar.</value>
  </data>
  <data name="UAParseCommandDescription" xml:space="preserve">
    <value>Analiza un UA en sus direcciones de receptor de componentes.</value>
  </data>
  <data name="NotAUnifiedAddress" xml:space="preserve">
    <value>Esta no es una dirección unificada.</value>
  </data>
  <data name="UAConstructCommandDescription" xml:space="preserve">
    <value>Construye una dirección unificada a partir de un conjunto de receptores.</value>
  </data>
  <data name="UAConstructReceiversArgumentDescription" xml:space="preserve">
    <value>Receptores a incluir en la dirección unificada.</value>
  </data>
  <data name="InvalidAddress" xml:space="preserve">
    <value>Error al analizar la dirección: "{address}". {error}</value>
  </data>
  <data name="NewAccountWalletPathOptionDescription" xml:space="preserve">
    <value>La ruta al archivo del monedero para crear.</value>
  </data>
  <data name="SyncCommandDescription" xml:space="preserve">
    <value>Descarga transacciones desde la cadena de bloques.</value>
  </data>
  <data name="WalletPathArgumentDescription" xml:space="preserve">
    <value>La ruta al archivo del monedero.</value>
  </data>
  <data name="BirthdayHeightOptionDescription" xml:space="preserve">
    <value>Obliga a que se registre una altura de cumpleaños en particular en la nueva cuenta. De forma predeterminada, esta será la longitud actual de la cadena de bloques si está en modo en línea.</value>
  </data>
  <data name="BalanceCommandDescription" xml:space="preserve">
    <value>Informes de saldos para cada pool.</value>
  </data>
  <data name="SendAmountArgumentDescription" xml:space="preserve">
    <value>La cantidad a enviar (en ZEC).</value>
  </data>
  <data name="SendCommandDescription" xml:space="preserve">
    <value>¡Envía Zcash a una dirección determinada.</value>
  </data>
  <data name="SendMemoOptionDescription" xml:space="preserve">
    <value>El memo a incluir en la transacción.</value>
  </data>
  <data name="SendRecipientArgumentDescription" xml:space="preserve">
    <value>La dirección para recibir fondos.</value>
  </data>
  <data name="NoSyncOption" xml:space="preserve">
    <value>No descargues primero los últimos bloques de la cadena de bloques. Esto acelerará el comando, pero puede llevarlo a fallar o reportar datos obsoletos.</value>
  </data>
  <data name="SendFeeOptionDescription" xml:space="preserve">
    <value>Anula el cálculo de la tarifa predeterminada con un valor específico (en ZEC).</value>
  </data>
  <data name="RequestPaymentArgumentCountMismatch" xml:space="preserve">
    <value>El switch {switchName} debe tener el mismo número de argumentos que el número de beneficiarios ({expected}) pero tenía {actual}.</value>
  </data>
  <data name="RequestPaymentCommandDescription" xml:space="preserve">
    <value>Cree un URI de solicitud de pago y, opcionalmente, un código QR.</value>
  </data>
  <data name="RequestPaymentPayeeArgumentDescription" xml:space="preserve">
    <value>La (s) dirección(es) de Zcash para recibir pagos.</value>
  </data>
  <data name="RequestPaymentLabelOptionDescription" xml:space="preserve">
    <value>Una etiqueta legible por humanos que identifica la dirección de recepción.</value>
  </data>
  <data name="RequestPaymentMessageOptionDescription" xml:space="preserve">
    <value>Un mensaje legible por humanos asociado con un pago en particular.</value>
  </data>
  <data name="RequestPaymentAmountOptionDescription" xml:space="preserve">
    <value>La cantidad a solicitar para un pago en particular.</value>
  </data>
  <data name="RequestPaymentMemoOptionDescription" xml:space="preserve">
    <value>Una nota asociada con un pago en particular.</value>
  </data>
  <data name="RequestPaymentSaveQRCodeOption" xml:space="preserve">
    <value>La ruta a la imagen para guardar con el código QR.</value>
  </data>
  <data name="HistoryCommandDescription" xml:space="preserve">
    <value>Enumera las transacciones de la cadena de bloques que pertenecen a este monedero.</value>
  </data>
  <data name="HistoryStartingBlockOptionDescription" xml:space="preserve">
    <value>El primer bloque cuyas transacciones deben incluirse en la lista de transacciones.</value>
  </data>
  <data name="ImportAccountCommandDescription" xml:space="preserve">
    <value>Crea una nueva cuenta basada en una clave de visualización.</value>
  </data>
  <data name="KeyArgumentDescription" xml:space="preserve">
    <value>La clave de visualización en la que basar la nueva cuenta.</value>
  </data>
  <data name="UnrecognizedKeyFormat" xml:space="preserve">
    <value>Este formato de clave no se reconoce.</value>
  </data>
</root>